services:
 nginx:
  image: nginx:alpine
  container_name: nginx
  restart: unless-stopped
  ports:
   - "80:80"
   - "443:443"
  volumes:
   - ./certbot/www:/var/www/certbot/
   - ./certbot/conf:/etc/letsencrypt/
   - ./nginx/conf.d/:/etc/nginx/conf.d/
  networks:
   - shopping-list-network
  depends_on:
   - backend
   - frontend

 backend:
  container_name: backend
  restart: unless-stopped
  build:
   context: ./backend
   dockerfile: Dockerfile
   args:
    BUILD_PATH: ./cmd/shopping-list/shopping-list.go
  networks:
   - shopping-list-network
  depends_on:
   - postgres

 frontend:
  container_name: frontend
  restart: unless-stopped
  build:
   context: ./frontend
   dockerfile: Dockerfile
  networks:
   - shopping-list-network

 postgres:
  container_name: postgres
  restart: unless-stopped
  image: postgres:14
  env_file:
   - ./postgres/.env
  volumes:
   - shopping-list-pgsql-volume:/var/lib/postgresql/data
  networks:
   - shopping-list-network

 certbot:
  image: certbot/certbot
  container_name: shopping-list_certbot
  volumes:
   - ./certbot/conf:/etc/letsencrypt
   - ./certbot/www:/var/www/certbot
  command: certonly --webroot -w /var/www/certbot/ --email test@gmail.com -d api.rwfshr.ru -d rwfshr.ru --agree-tos --cert-name shopping-list

networks:
 shopping-list-network:
  driver: bridge

volumes:
 shopping-list-pgsql-volume:
  driver: local